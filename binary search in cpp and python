binary search:
class Solution {
public:
    int search(vector<int>& nums, int target) {
        int l=0;
        int h=nums.size()-1;
        while(l<=h)
        {
            int mid=l+(h-l)/2; ;
            if (target==nums[mid])
                     return mid;
                         
            else if(target<nums[mid])
                     h=mid-1;
                    
            else if(target>nums[mid])
                     l=mid+1;
                     
        }return -1;
        
    }
};
#in python:

class Solution:
    def search(self, nums: List[int], target: int) -> int:
        l,h=0,len(nums)-1
        while l<=h:
            mid=(l+h)//2
            if target==nums[mid]:
                return mid
            elif target<nums[mid]:
                h=mid-1
            elif target>nums[mid]:
                l=mid+1
            
        return -1
        
