# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def mergeTwoLists(self, list1: Optional[ListNode], list2: Optional[ListNode]) -> Optional[ListNode]:
        if list1==None and list2==None:
            return None
        elif list1!=None and list2==None:
            return list1
        elif list1==None and list2!=None:
            return list2
        k=ListNode()
        head=k
        c=0
        while list1!=None and list2!=None:
            if c>0:
                k.next=ListNode()
                k=k.next
            if list1.val>list2.val:
                k.val=list2.val
                list2=list2.next
            else:
                k.val=list1.val
                list1=list1.next
            
            c+=1
        if list2!=None:
            k.next=list2
        if list1!=None:
            k.next=list1
        return head
            
            
            
     
         
        
