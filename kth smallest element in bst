link: https://leetcode.com/problems/kth-smallest-element-in-a-bst/

code:
# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def kthSmallest(self, root: Optional[TreeNode], k: int) -> int:
        stack = [root]
        node = root
        kValue = 0
        
        while True:
            while node:
                stack.append(node)
                node = node.left
            
            if stack:
                node = stack.pop()
                kValue += 1

                if kValue == k: return node.val
                node = node.right
