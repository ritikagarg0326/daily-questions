# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def hasCycle(self, head: Optional[ListNode]) -> bool:
        if head is None or head.next is None:
            return False
        s = head
        fast = head.next
        while fast.next and fast.next.next and s != fast:
            s = s.next
            fast = fast.next.next
        return s == fast
        
